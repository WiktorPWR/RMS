def main():
    from status_logger import StatusLogger
    status_log = StatusLogger()

    # Inicjalizacja robota
    robot = Robot(status_log, distance_between_floor_endstops=100)
    robot.paint_sprayer = PaintSprayer()

    def adjust_to_wall_distance(robot, tolerance=1.0, max_attempts=10):
        """Reguluje pozycję robota tak, aby utrzymać odległość 20 cm od ściany."""
        for attempt in range(max_attempts):
            current_distance = robot.ultrasonik_sensor.filter_signal()
            error = robot.target_distance_from_wall - current_distance

            robot.log(f"Odległość od ściany: {current_distance:.2f} cm", "info")

            if abs(error) <= tolerance:
                robot.log("Odległość od ściany prawidłowa.", "success")
                return

            robot.move_forward(1 if error > 0 else -1)
            sleep(0.1)

        robot.log("Nie udało się ustawić dokładnej odległości od ściany.", "warning")

    try:
        robot.log("Start programu: ustawianie odległości od ściany (20 cm).", "info")
        adjust_to_wall_distance(robot)

        while True:
            # --- Malowanie w górę ---
            robot.log("Malowanie: ruch w górę", "info")
            robot.paint_sprayer.press()
            robot.platform.move_up_monitoring_encoder()
            robot.paint_sprayer.release()

            # --- Przesunięcie w prawo ---
            robot.log("Przesunięcie w prawo po malowaniu w górę", "info")
            robot.move_forward(5)
            adjust_to_wall_distance(robot)

            # Sprawdzenie zakończenia
            if robot.endstop_floor_2.change_detected():
                robot.log("Wykryto krańcówkę końcową poziomą", "warning")
                break
            if robot.ncoder_floor.get_position() >= robot.maks_distance:
                robot.log("Osiągnięto maksymalny dystans poziomy", "warning")
                break

            # --- Malowanie w dół ---
            robot.log("Malowanie: ruch w dół", "info")
            robot.paint_sprayer.press()
            robot.platform.move_down_monitoring_encoder()
            robot.paint_sprayer.release()

            # --- Przesunięcie w prawo ---
            robot.log("Przesunięcie w prawo po malowaniu w dół", "info")
            robot.move_forward(5)
            adjust_to_wall_distance(robot)

            # Sprawdzenie zakończenia
            if robot.endstop_floor_2.change_detected():
                robot.log("Wykryto krańcówkę końcową poziomą", "warning")
                break
            if robot.ncoder_floor.get_position() >= robot.maks_distance:
                robot.log("Osiągnięto maksymalny dystans poziomy", "warning")
                break

        robot.log("Zakończono cały proces malowania.", "success")

    except Exception as e:
        robot.paint_sprayer.release()
        robot.log(f"Wystąpił błąd: {e}", "error")

    finally:
        robot.paint_sprayer.release()
        robot.Motor_Left.set_speed_motor(True, 0)
        robot.Motor_Right.set_speed_motor(True, 0)
        GPIO.cleanup()
        robot.log("GPIO wyczyszczone, program zakończony.", "info")

if __name__ == "__main__":
    main()
