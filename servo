import RPi.GPIO as GPIO
from time import sleep

class PaintSprayer():
    """
    Class to handle a servo that presses the spray can in the wall painting robot.
    
    Attributes
    ----------
    servo_pin : int
        GPIO pin connected to the servo control wire.
    pwm : GPIO.PWM
        PWM object to control the servo.
    
    Methods
    -------
    press()
        Presses the spray can.
    release()
        Releases the spray can.
   
    """

    def __init__(self, servo_pin):
        self.servo_pin = servo_pin
        GPIO.setup(self.servo_pin, GPIO.OUT)
        self.pwm = GPIO.PWM(self.servo_pin, 50)  
        self.pwm.start(0)
        sleep(0.5)
        self.release()

    def press(self):
        """naciskanie puchy"""
        self.pwm.ChangeDutyCycle(7.5)  # to jest 90 stopni, dostosuje sie juz przy testach
        sleep(0.5)
        self.pwm.ChangeDutyCycle(0)  

    def release(self):
        """serwo w pozycji zero(poczatkowej)"""
        self.pwm.ChangeDutyCycle(2.5)  # kat zero stopni
        sleep(0.5)
        self.pwm.ChangeDutyCycle(0)

   


#do main
def main():
    # Inicjalizacja GPIO
    GPIO.setmode(GPIO.BCM)  

    # Numer pinu GPIO do sterowania serwem
    servo_pin = 17  

    # Tworzymy obiekt klasy PaintSprayer
    sprayer = PaintSprayer(servo_pin)

    try:
        # Wywołanie metody press() 
        
        sprayer.press()  # Naciskamy puszkę
       

        # Wywołanie metody release() 
        
        sprayer.release()  # Uwalniamy puszkę
        
   


